services:

  # Define the Redis service and expose Redis' default port on localhost
  #
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  # Define first bot's SergeantSocket and CommanderCortex services
  # Both services use config.pybot1.json
  #
  sergeant-socket-1:
    container_name: sergeant-socket-Pybot1
    image: ghcr.io/corsaircoalition/sergeantsocket:3
    volumes:
      - ./config.pybot1.json:/config.json # configuration for bot 1
    depends_on:
      - redis
    environment: # use environment variables to override the values in config.json
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TLS: false
      REDIS_USERNAME: ""
      REDIS_PASSWORD: ""

  commander-cortex-1:
    profiles:
      - ui
    image: ghcr.io/corsaircoalition/commandercortex:1
    volumes:
      - ./config.pybot1.json:/config.json # configuration for bot 1
    depends_on:
      - redis
      - sergeant-socket-1
    environment: # use environment variables to override the values in config.json
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TLS: false
      REDIS_USERNAME: ""
      REDIS_PASSWORD: ""
    stdin_open: true
    tty: true

  # Define second bot's SergeantSocket and CommanderCortex services
  # Both services use config.pybot2.json
  #
  sergeant-socket-2:
    container_name: sergeant-socket-Pybot2
    image: ghcr.io/corsaircoalition/sergeantsocket:3
    volumes:
      - ./config.pybot2.json:/config.json  # configuration for bot 2
    depends_on:
      - redis
    environment: # use environment variables to override the values in config.json
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TLS: false
      REDIS_USERNAME: ""
      REDIS_PASSWORD: ""

  commander-cortex-2:
    profiles:
      - ui
    image: ghcr.io/corsaircoalition/commandercortex:1
    volumes:
      - ./config.pybot2.json:/config.json # configuration for bot 2
    depends_on:
      - redis
      - sergeant-socket-2
    environment: # use environment variables to override the values in config.json
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TLS: false
      REDIS_USERNAME: ""
      REDIS_PASSWORD: ""
    stdin_open: true
    tty: true
